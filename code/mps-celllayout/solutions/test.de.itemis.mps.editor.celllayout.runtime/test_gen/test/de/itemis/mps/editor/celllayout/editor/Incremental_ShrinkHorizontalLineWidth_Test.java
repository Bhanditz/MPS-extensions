package test.de.itemis.mps.editor.celllayout.editor;

/*Generated by MPS */

import jetbrains.mps.MPSLaunch;
import jetbrains.mps.lang.test.runtime.BaseTransformationTest;
import org.junit.Test;
import jetbrains.mps.lang.test.runtime.BaseEditorTestBody;
import jetbrains.mps.nodeEditor.EditorComponent;
import jetbrains.mps.ide.ThreadUtils;
import de.itemis.mps.editor.celllayout.runtime.LayoutInterceptor;

@MPSLaunch
public class Incremental_ShrinkHorizontalLineWidth_Test extends BaseTransformationTest {
  @Test
  public void test_Incremental_ShrinkHorizontalLineWidth() throws Throwable {
    initTest("${mbeddr.github.core.home}/code/plugins/sl-all", "r:ee6cf12e-fe83-4365-8111-77ef29f91ab7(test.de.itemis.mps.editor.celllayout.editor@tests)");
    runTest("test.de.itemis.mps.editor.celllayout.editor.Incremental_ShrinkHorizontalLineWidth_Test$TestBody", "testMethod", false);
  }

  @MPSLaunch
  public static class TestBody extends BaseEditorTestBody {
    @Override
    public void testMethodImpl() throws Exception {
      initEditorComponent("1609776727060706570", "");

      final EditorComponent editorComponent = getEditorComponent();
      ThreadUtils.runInUIThreadAndWait(new Runnable() {
        public void run() {
          LayoutInterceptor.install(editorComponent);
          editorComponent.relayout();
        }
      });

      int width1 = editorComponent.getRootCell().getWidth();
      invokeAction("jetbrains.mps.ide.editor.actions.Backspace_Action");
      int width2 = editorComponent.getRootCell().getWidth();
      System.out.println(width1 + " -> " + width2);
      assert width1 != width2;



    }
  }
}
